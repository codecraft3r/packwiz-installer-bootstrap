import org.jetbrains.kotlin.gradle.dsl.JvmTarget

plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'org.jetbrains.kotlin.jvm' version '2.2.0'
    id 'org.jetbrains.kotlin.plugin.serialization' version '2.2.0'
}
java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}
kotlin {
    compilerOptions {
        jvmTarget.set(JvmTarget.JVM_17)
        javaParameters.set(true)
    }
}

dependencies {
    implementation 'com.eclipsesource.minimal-json:minimal-json:0.9.5'
    implementation 'commons-cli:commons-cli:1.4'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.9.0"
    implementation 'com.google.code.gson:gson:2.10.1'
    //testImplementation 'junit:junit:4.12'
}

repositories {
    mavenCentral()
}

tasks.named("shadowJar") {
    archiveClassifier.set("all")
    // Relocate Kotlin and other dependencies
    relocate("kotlin", "bootstrapper.shadow.kotlin")
    relocate("kotlinx", "bootstrapper.shadow.kotlinx")
    relocate("org.jetbrains", "bootstrapper.shadow.org.jetbrains")
}

File testProjectDirectory = rootProject.getBuildDir().toPath().resolve("test-project").toFile()
testProjectDirectory.mkdirs()

application {
    mainClassName = 'link.infra.packwiz.installer.bootstrap.Main'

    // Change the working directory for the run task. Here is an example:
    tasks.run.workingDir = testProjectDirectory
}

def getGitTag = {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags', '--abbrev=0'
        standardOutput = stdout
        ignoreExitValue = true
    }
    return stdout.toString().trim()
}

jar {
    manifest {
        attributes('Main-Class': 'link.infra.packwiz.installer.bootstrap.Main')
        attributes('Version': getGitTag())
    }
}